{"version":3,"sources":["../../src/controllers/Meetup.js"],"names":["validateOptions","required","format","meetups","rsvps","Meetup","req","res","payload","body","validation","Validate","init","params","arrays","prepareContent","query","Query","save","then","docs","catch","code","err","id","queryRecords","getRecord","errorMsg","queryAllRecords","getAllRecords","rsvp","formatByDateAsc","Filters","date"],"mappings":"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","file":"Meetup.js","sourcesContent":["import Validate from '../functions/validate';\nimport { errorRxx, response2xx } from '../functions/handlers';\nimport Query from '../functions/query';\nimport Filters from '../functions/filters';\n\nlet validateOptions = {\n\trequired: ['topic', 'Tags', 'happeningOn', 'location'], // Required fields\n\tformat: ['topic'], // Check Format\n};\n\nconst meetups = 'meetups';\nconst rsvps = 'rsvps';\n\n/**\n * Create Meetup Class\n */\nclass Meetup {\n\t/**\n\t * @param {object} req Controls Meetup Request\n\t * @param {object} res Controls to Meetup Response\n\t */\n\tstatic create(req, res) {\n\t\tlet payload = req.body;\n\t\tconst validation = Validate.init(payload, validateOptions);\n\t\tif (validation !== true && typeof validation === 'string') return errorRxx(res, 400, false, validation);\n\n\t\tconst params = {\n\t\t\tarrays: ['Tags', 'images'],\n\t\t};\n\t\tpayload = Validate.prepareContent(payload, params);\n\t\t// ADD TO MEETUPS DATA\n\t\tconst query = new Query(payload, meetups, ['topic']);\n\t\t// SAVE MEETUP\n\t\treturn query.save()\n\t\t\t.then(docs => response2xx(res, 200, true, docs))\n\t\t\t.catch(err => errorRxx(res, query.code, false, err));\n\t}\n\n\tstatic getRecord(req, res) {\n\t\tconst id = req.params.id;\n\t\tconst query = new Query(id, meetups, null, 'integer');\n\t\tconst queryRecords = query.getRecord();\n\t\tif (!queryRecords) return errorRxx(res, query.code, false, query.errorMsg);\n\t\treturn response2xx(res, 200, true, queryRecords);\n\t}\n\n\tstatic getAllRecords(req, res) {\n\t\tconst query = new Query(null, meetups, null, null);\n\t\tconst queryAllRecords = query.getAllRecords();\n\t\treturn response2xx(res, 200, true, queryAllRecords);\n\t}\n\n\tstatic rsvp(req, res) {\n\t\tconst id = req.params.id;\n\t\tconst payload = req.body;\n\t\tconst query = new Query(id, rsvps, null, 'integer');\n\t\tconst queryRecords = query.getRecord();\n\t\tvalidateOptions = {\n\t\t\trequired: ['meetup', 'response'], // Required fields\n\t\t};\n\t\tconst validation = Validate.init(payload, validateOptions);\n\t\tif (validation !== true && typeof validation === 'string') return errorRxx(res, 400, false, validation);\n\t\tif (!queryRecords) return errorRxx(res, query.code, false, query.errorMsg);\n\t\tquery.payload = payload;\n\t\tquery.rsvp.id = id;\n\t\treturn query.save()\n\t\t\t.then(docs => response2xx(res, 200, true, docs))\n\t\t\t.catch(err => errorRxx(res, 400, false, err));\n\t}\n\n\tstatic upcoming(req, res) {\n\t\tconst query = new Query(null, meetups, null, null);\n\t\tconst formatByDateAsc = Filters.date(query.getAllRecords());\n\t\treturn response2xx(res, 200, true, formatByDateAsc);\n\t}\n}\n\nexport default Meetup;\n"]}